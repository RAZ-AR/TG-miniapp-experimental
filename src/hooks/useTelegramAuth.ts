import { useMemo } from 'react';
import type { TelegramAuthResult, TelegramWebApp } from '../types';

const isDev = (import.meta as any)?.env?.MODE === "development";

const generateTestUserId = () => {
  const key = "test_user_id";
  try {
    const stored = localStorage.getItem(key);
    if (stored) return parseInt(stored);
    const newId = (Math.random() * 1_000_000) | 0;
    localStorage.setItem(key, String(newId));
    return newId;
  } catch {
    return (Math.random() * 1_000_000) | 0;
  }
};

export const useTelegramAuth = (): TelegramAuthResult => {
  return useMemo(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ä–µ–∞–ª—å–Ω—ã–π Telegram WebApp —Å –¥–∞–Ω–Ω—ã–º–∏
    const realTg = typeof window !== "undefined" && (window as any).Telegram?.WebApp;
    
    // –ï—Å–ª–∏ WebApp –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ –º—ã –≤ Telegram - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
    if (typeof window !== "undefined" && !realTg && window.parent !== window) {
      try {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp
        if ((window as any).Telegram?.WebApp?.ready) {
          (window as any).Telegram.WebApp.ready();
        }
      } catch (e) {
        console.log('‚ö†Ô∏è Telegram WebApp initialization failed:', e);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç Telegram (–¥–ª—è Desktop)
    const urlParams = new URLSearchParams(window.location.search);
    const tgWebAppData = urlParams.get('tgWebAppData');
    const hasUrlParams = !!tgWebAppData;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º debug —Ä–µ–∂–∏–º
    const debugMode = urlParams.get('debug') === '1';
    const forceMode = urlParams.get('force') === '1';

    // –í Telegram WebApp –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å window.parent !== window
    const isInTelegram = typeof window !== "undefined" && window.parent !== window;
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Telegram —Å—Ä–µ–¥—É
    const isTelegramEnv = typeof window !== "undefined" && (
      window.parent !== window ||
      navigator.userAgent.includes('Telegram') ||
      (window as any).TelegramWebviewProxy ||
      hasUrlParams
    );

    const hasRealTgData = (!!realTg && (!!realTg.initData || !!realTg.initDataUnsafe?.user?.id)) || hasUrlParams || (forceMode && isTelegramEnv) || isTelegramEnv;

    console.log('üîç Telegram detection:', {
      realTg: !!realTg,
      hasInitData: !!realTg?.initData,
      initDataValue: realTg?.initData,
      hasUser: !!realTg?.initDataUnsafe?.user?.id,
      userObject: realTg?.initDataUnsafe?.user,
      initDataUnsafe: realTg?.initDataUnsafe,
      hasUrlParams,
      tgWebAppData: tgWebAppData ? 'present' : 'none',
      debugMode,
      forceMode,
      isInTelegram,
      isTelegramEnv,
      hasRealTgData,
      isDev,
      userAgent: navigator.userAgent.includes('Telegram') ? 'contains Telegram' : 'no Telegram',
      webviewProxy: !!(window as any).TelegramWebviewProxy,
      extractedUserId: userId,
      finalTgId: userId ? String(userId) : null,
    });

    // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å user ID –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    let userId: string | number | null = null;
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ API
    if (realTg?.initDataUnsafe?.user?.id) {
      userId = realTg.initDataUnsafe.user.id;
    }
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ TelegramWebviewProxy
    else if ((window as any).TelegramWebviewProxy?.postEvent) {
      try {
        // –î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Ä—Å–∏–π –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã
        const webviewData = (window as any).TelegramWebviewProxy;
        if (webviewData.initParams) {
          console.log('üîç WebviewProxy initParams:', webviewData.initParams);
        }
      } catch (e) {
        console.log('‚ö†Ô∏è WebviewProxy access failed:', e);
      }
    }
    // –í—Ä–µ–º–µ–Ω–Ω—ã–π fallback –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID –∏–∑ localStorage –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    else if (hasRealTgData && !userId) {
      const savedOwner = localStorage.getItem('willow_owner_tg_id'); // –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á
      if (savedOwner && savedOwner !== 'telegram_user') {
        userId = savedOwner;
        console.log('üîÑ Using saved owner ID:', userId);
      } else {
        // Fallback –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        userId = '128136200'; // –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π ID –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        console.log('üÜò Using fallback test ID:', userId);
      }
    }

    // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π WebApp –æ–±—ä–µ–∫—Ç –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ Telegram –Ω–æ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
    const tg: TelegramWebApp | null = realTg || (isTelegramEnv && hasRealTgData ? {
      initData: tgWebAppData || null,
      initDataUnsafe: { 
        user: userId ? { id: Number(userId) } : null 
      },
    } : null);

    const currentTgId: string | null = userId ? String(userId) : null;

    return {
      tg,
      currentTgId,
      hasRealTgData,
      isInTelegram
    };
  }, []);
};