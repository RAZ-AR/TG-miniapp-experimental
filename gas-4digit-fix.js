// –ó–ê–ú–ï–ù–ò–¢–ï –≤ Google Apps Script —Ñ—É–Ω–∫—Ü–∏—é nextCardNumber_() –Ω–∞ —ç—Ç—É:

function nextCardNumber_() {
  console.log("üîç GAS DEBUG: Generating 4-digit card number...");
  var sh = getSheet_('Cards');
  var existingCards = new Set();

  // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç
  if (sh.getLastRow() > 1) {
    var vals = sh.getRange(2, 2, sh.getLastRow() - 1, 1).getValues(); // —Ç–æ–ª—å–∫–æ –∫–æ–ª–æ–Ω–∫–∞ B (card)
    console.log("üîç GAS DEBUG: Found", vals.length, "existing cards");
    
    for (var i = 0; i < vals.length; i++) {
      var cardNum = String(vals[i][0]); // vals[i][0] –ø–æ—Ç–æ–º—É —á—Ç–æ –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
      if (cardNum && cardNum !== '' && cardNum !== 'undefined') {
        existingCards.add(cardNum);
        console.log("üîç GAS DEBUG: Existing card:", cardNum);
      }
    }
  }

  // –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º 4-–∑–Ω–∞—á–Ω—ã–π –Ω–æ–º–µ—Ä (1000-9999)
  var newCard;
  var attempts = 0;
  var maxAttempts = 500; // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
  
  do {
    // Math.random() * 9000 –¥–∞—Å—Ç 0-8999, + 1000 = 1000-9999
    newCard = String(Math.floor(Math.random() * 9000) + 1000);
    attempts++;
    console.log("üîç GAS DEBUG: Attempt", attempts, "generated:", newCard, "length:", newCard.length);

    if (attempts > maxAttempts) {
      // –ï—Å–ª–∏ –≤—Å–µ —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –∑–∞–Ω—è—Ç—ã, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏
      var timestamp = String(Date.now());
      newCard = timestamp.slice(-4); // –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã timestamp
      
      // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å –º–µ–Ω–µ–µ 4 —Ü–∏—Ñ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º –Ω—É–ª–∏ –≤ –Ω–∞—á–∞–ª–µ
      while (newCard.length < 4) {
        newCard = '0' + newCard;
      }
      
      // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å 0 (–º–∏–Ω–∏–º—É–º 1000)
      if (newCard.charAt(0) === '0') {
        newCard = '1' + newCard.slice(1);
      }
      
      console.log("üîç GAS DEBUG: Using timestamp fallback:", newCard);
      break;
    }
  } while (existingCards.has(newCard));

  console.log("üîç GAS DEBUG: Final 4-digit card:", newCard, "length:", newCard.length, "after", attempts, "attempts");
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–æ–º–µ—Ä —Ç–æ—á–Ω–æ 4-–∑–Ω–∞—á–Ω—ã–π
  if (newCard.length !== 4) {
    console.error("üîç GAS ERROR: Generated card is not 4-digit:", newCard);
    newCard = String(Math.floor(Math.random() * 9000) + 1000); // –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
  }
  
  return newCard;
}

// –¢–ê–ö–ñ–ï –ó–ê–ú–ï–ù–ò–¢–ï getOrCreateCardForTelegram_() –Ω–∞ —ç—Ç—É –≤–µ—Ä—Å–∏—é —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π:
function getOrCreateCardForTelegram_(tgUser) {
  console.log("üîç GAS DEBUG: getOrCreateCardForTelegram_", JSON.stringify(tgUser));
  ensureHeaders_();
  if (!tgUser || !tgUser.id) throw new Error('no telegram user id');
  
  var sh = getSheet_('Cards');
  var row = findCardRowByTelegram_(tgUser.id);
  
  if (row) {
    var existingCard = String(sh.getRange(row, 2).getValue());
    console.log("üîç GAS DEBUG: Found existing card", existingCard, "for user", tgUser.id);
    return existingCard;
  }
  
  var cardNew = nextCardNumber_();
  console.log("üîç GAS DEBUG: Creating new 4-digit card", cardNew, "for user", tgUser.id);
  
  // –í–ê–ñ–ù–û: —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∫–∞—Ä—Ç–∞ —Ç–æ—á–Ω–æ 4-–∑–Ω–∞—á–Ω–∞—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
  if (cardNew.length !== 4) {
    console.error("üîç GAS ERROR: Card is not 4-digit, regenerating...");
    cardNew = String(Math.floor(Math.random() * 9000) + 1000);
  }
  
  var rowData = [tgUser.id, cardNew, (tgUser.username || tgUser.first_name || ''), tgUser.id];
  console.log("üîç GAS DEBUG: Appending 4-digit card to Cards sheet:", JSON.stringify(rowData));
  
  sh.appendRow(rowData);
  return cardNew;
}